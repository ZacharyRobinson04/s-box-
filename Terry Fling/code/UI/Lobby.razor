@using Sandbox;
@using Sandbox.UI;
@using Sandbox.Network
@using System.Threading.Tasks
@inherits PanelComponent

<root>
	<div class="center">
		<div class="left">
			<div class="title">
				Terry Hoops
				<div class="options">
					<div class="button" onclick=@( () => CreateServer())>
						Create Lobby
					</div>
					<div class="button" onclick=@( () => Quit() )>
						Quit Game
					</div>
				</div>
			</div>

			<div class="lobbies">
				<div class="header">
					Open Courts
				</div>
				@if ( IsRefreshing )
				{
					<label>Refreshing the server list...</label>
				}
				else if ( List.Count == 0 )
				{
					<label>Looks like no games are open. Why not make your own?</label>
				} else
				{
				<div class="button-list">
					@foreach ( var lobby in List )
					{
						<div class="button" onclick=@( () => OpenLobby( lobby ) )>
							<div class="title">
								@lobby.Name
							</div>

							<div class="meta">
								@* <div class="map">
									@lobby.Map
								</div> *@

								<div class="count">
									@lobby.Members / @lobby.MaxMembers
								</div>
							</div>
						</div>
					}
				</div>
			}
			</div>
			
		</div>
	</div>
</root>

@code
{
	private bool IsRefreshing {get; set;}
	private List<LobbyInformation> List {get; set;} = new();
	protected override int BuildHash() => System.HashCode.Combine( RealTime.Now );


	protected override void OnEnabled()
	{
		base.OnEnabled();
		
		_ = RefreshLobbyList();
	}

	private async Task RefreshLobbyList()
	{
		while ( true )
		{
			IsRefreshing = true;
			StateHasChanged();

			List = await Networking.QueryLobbies();

			IsRefreshing = false;
			StateHasChanged();

			await Task.DelayRealtimeSeconds( 5f );
		}
	}
	
	private void OpenLobby( LobbyInformation lobby )
	{
		GameNetworkSystem.Connect( lobby.LobbyId );
	}

	private void Quit()
	{
		Game.Close();
	}

	private void CreateServer()
	{
		Game.ActiveScene.LoadFromFile( "scenes/minimal.scene");
	}
}